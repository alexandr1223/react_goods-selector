{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectGoodHandler","good","includes","setState","prevState","filter","item","clearSelections","showGoods","length","join","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,kBAAoB,SAACC,GACf,EAAKH,MAAMC,aAAaG,SAASD,GACnC,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAcK,EAAUL,aAAaM,QAAO,SAACC,GAAD,OAAUA,IAASL,SAGjE,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAa,GAAD,mBAAMK,EAAUL,cAAhB,CAA8BE,S,EAKhDM,gBAAkB,WAChB,EAAKJ,SAAS,CAAEJ,aAAc,M,EAGhCS,UAAY,WACV,IAAQT,EAAiB,EAAKD,MAAtBC,aAER,OAA4B,IAAxBA,EAAaU,OACR,oBAGmB,IAAxBV,EAAaU,OACT,GAAN,OAAUV,EAAV,gBAGI,GAAN,OAAUA,EAAaW,KAAK,MAA5B,kB,4CAGF,WAAU,IAAD,OACCX,EAAiBY,KAAKb,MAAtBC,aAER,OACE,qBAAKa,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,oBAAd,SACGD,KAAKH,cAEPT,EAAaU,OAAS,GACrB,wBACEI,KAAK,SACLD,UAAU,uBACVE,QAASH,KAAKJ,gBAHhB,sBASJ,oBAAIK,UAAU,gCAAd,SACGhB,EAAgBmB,KAAI,SAACT,GAAD,OACnB,qBAEEM,UAAWI,IACT,cACA,CACE,wCACAjB,EAAaG,SAASI,KAN5B,UAUGA,EACD,wBACEO,KAAK,SACLD,UAAWI,IACT,kBACA,CAAE,YAAajB,EAAaG,SAASI,KAEvCQ,QAAS,WACP,EAAKd,kBAAkBM,IAP3B,SAUIP,EAAaG,SAASI,GAAmB,SAAX,aApB7BA,iB,GA1DHW,IAAMC,WAyFTrB,IC5GfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.78241b7a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.min.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  selectGoodHandler = (good: string) => {\n    if (this.state.selectedGood.includes(good)) {\n      this.setState(prevState => ({\n        selectedGood: prevState.selectedGood.filter((item) => item !== good),\n      }));\n    } else {\n      this.setState(prevState => ({\n        selectedGood: [...prevState.selectedGood, good],\n      }));\n    }\n  };\n\n  clearSelections = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  showGoods = () => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGood.length === 1) {\n      return `${selectedGood} is selected`;\n    }\n\n    return `${selectedGood.join(', ')} are selected`;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"block container\">\n          <div className=\"block\">\n            <h1 className=\"content is-medium\">\n              {this.showGoods()}\n            </h1>\n            {selectedGood.length > 0 && (\n              <button\n                type=\"button\"\n                className=\"button is-black mb-2\"\n                onClick={this.clearSelections}\n              >\n                Clear\n              </button>\n            )}\n          </div>\n          <ul className=\"is-one-third content is-small\">\n            {goodsFromServer.map((item) => (\n              <li\n                key={item}\n                className={classNames(\n                  'goods__item',\n                  {\n                    'has-text-white has-background-success':\n                    selectedGood.includes(item),\n                  },\n                )}\n              >\n                {item}\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'button is-light',\n                    { 'is-danger': selectedGood.includes(item) },\n                  )}\n                  onClick={() => {\n                    this.selectGoodHandler(item);\n                  }}\n                >\n                  {!selectedGood.includes(item) ? 'Select' : 'Remove'}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}